% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sequence_set.R
\name{sequence_set}
\alias{sequence_set}
\title{R6 Class for handling a logical set of sequence data}
\description{
\code{sequence_set} class provides an infrastructure for working with sets of
sequence that have been generated by the base calling software.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-sequence_set-new}{\code{sequence_set$new()}}
\item \href{#method-sequence_set-sync}{\code{sequence_set$sync()}}
\item \href{#method-sequence_set-data}{\code{sequence_set$data()}}
\item \href{#method-sequence_set-validate_obj}{\code{sequence_set$validate_obj()}}
\item \href{#method-sequence_set-clone}{\code{sequence_set$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_set-new"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_set-new}{}}}
\subsection{Method \code{new()}}{
Constructor method for \code{sequence_set} requires just a path to the
cache_directory that will be populated with parquet files that
summarise the sequence collection being processed
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{sequence_set$new(cache_dir)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cache_dir}}{a fully qualified path to a cache directory}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_set-sync"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_set-sync}{}}}
\subsection{Method \code{sync()}}{
allowing for the real time generation of sequence data and accommodating
the background processing of indices, this method just pokes the system
to ensure that the latest changes within the \code{cache_dir} are understood
and that data held is up-to-date.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{sequence_set$sync()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_set-data"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_set-data}{}}}
\subsection{Method \code{data()}}{
get the arrow data from the aggregate parquet file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{sequence_set$data()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_set-validate_obj"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_set-validate_obj}{}}}
\subsection{Method \code{validate_obj()}}{
accessory method to check the dataset for integrity; this canb be
considered on the basis of various facets that include
\itemize{
\item are the sequence reads derived from a single flowcell/runid?
\item are the sequence reads all from the same basecaller/model?
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{sequence_set$validate_obj()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sequence_set-clone"></a>}}
\if{latex}{\out{\hypertarget{method-sequence_set-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{sequence_set$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
